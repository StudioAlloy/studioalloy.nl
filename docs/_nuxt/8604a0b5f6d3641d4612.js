(window.webpackJsonp=window.webpackJsonp||[]).push([[8,13],{264:function(e,n,t){"use strict";t.r(n);var r={props:["item"],name:"FasesItem",data:function(){return{}},computed:{componentSVG:function(){var e=this.item.acfFases.illustrationName;return function(){return t(282)("./FasesItemSVG".concat(e))}}}},o=t(13),component=Object(o.a)(r,function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"flex-FasesItem"},[n(this.componentSVG,{tag:"component"}),this._v(" "),n("h3",[this._v(this._s(this.item.title))])],1)},[],!1,null,null,null);n.default=component.exports},271:function(e,n,t){"use strict";t.r(n);var r=t(286),o=t.n(r),l={name:"Fases",data:function(){return{title:"Fases"}},components:{FasesItem:t(264).default},apollo:{fases:{prefetch:!0,query:o.a,update:function(data){return data.fases.nodes}}}},d=t(13),component=Object(d.a)(l,function(){var e=this.$createElement,n=this._self._c||e;return n("section",{staticClass:"flex-Fases"},[n("div",{staticClass:"container--large container-type--fases"},[n("div",{staticClass:"inner container-col"},[this._l(this.fases,function(e,t){return[n("FasesItem",{key:t,attrs:{item:e}})]})],2)])])},[],!1,null,null,null);n.default=component.exports},282:function(e,n,t){var map={"./FasesItemSVGfase-1":[261,3],"./FasesItemSVGfase-1.vue":[261,3],"./FasesItemSVGfase-2":[260,4],"./FasesItemSVGfase-2.vue":[260,4],"./FasesItemSVGfase-3":[259,5],"./FasesItemSVGfase-3.vue":[259,5]};function r(e){if(!t.o(map,e))return Promise.resolve().then(function(){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n});var n=map[e],r=n[0];return t.e(n[1]).then(function(){return t(r)})}r.keys=function(){return Object.keys(map)},r.id=282,e.exports=r},286:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetFases"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"fases"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"orderby"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"field"},value:{kind:"EnumValue",value:"MENU_ORDER"}},{kind:"ObjectField",name:{kind:"Name",value:"order"},value:{kind:"EnumValue",value:"ASC"}}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"excerpt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"link"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"slug"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"acfFases"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"illustrationName"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:199}};t.loc.source={body:"query GetFases {\n  fases(where: {orderby: {field: MENU_ORDER, order: ASC}}) {\n    nodes {\n      title\n      excerpt\n      link\n      slug\n      acfFases {\n        illustrationName\n      }\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach(function(e){if(e.name){var n=new Set;!function e(n,t){if("FragmentSpread"===n.kind)t.add(n.name.value);else if("VariableDefinition"===n.kind){var r=n.type;"NamedType"===r.kind&&t.add(r.name.value)}n.selectionSet&&n.selectionSet.selections.forEach(function(n){e(n,t)}),n.variableDefinitions&&n.variableDefinitions.forEach(function(n){e(n,t)}),n.definitions&&n.definitions.forEach(function(n){e(n,t)})}(e,n),r[e.name.value]=n}}),e.exports=t,e.exports.GetFases=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var l=r[n]||new Set,d=new Set,c=new Set;for(l.forEach(function(e){c.add(e)});c.size>0;){var f=c;c=new Set,f.forEach(function(e){d.has(e)||(d.add(e),(r[e]||new Set).forEach(function(e){c.add(e)}))})}return d.forEach(function(n){var r=o(e,n);r&&t.definitions.push(r)}),t}(t,"GetFases")}}]);